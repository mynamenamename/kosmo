package Chapter10.EX04;

//업 캐스팅 : 컴파일러가 자동으로 변환!
     // 기본 자료형 : 좁은 범위 (int) > 넓은 범위 (double)
     // 상속      : 자식 타입 > 부모 타입 
//다운 캐스팅 : 수동으로 직접 변환! 
     // 기본 자료형 : 넓은 범위 (double) > 좁은 범위 (int) , *자료가 소실 될 수 있음
     // 상속      : 부모 타입 > 자식 타입 , *실행시 오류가 발생할 수 있다.

class A {}

class B extends A {}

class C extends B {}

class D extends B {}

public class Using_TypeCasting {
	public static void main(String[] args) {
      //1. 업캐스팅 (자동변환) : 생략시 컴파일러가 자동으로 추가.
	  A ac = new C();      // C >> A 업캐스팅
	  B bc = new C();      // C >> B 업캐스팅
	  
	  //bb는 A,B 포함하고 있고, B타입으로 지정 (A,B 모두 사용됨)
	  B bb = new B();  
	  A a = (A) bb;        // B >> A 업캐스팅 (A 필드,메소드)
	  
	  //2. 다운캐스팅 (수동변환) : 직접 할당하기. 캐스팅이 불가능한 경우 실행시 오류
	      //다운캐스팅이 불가한 경우 > 타입을 내포하고 있지 않기 때문에~!
	  A aa = new A();      // aa는 A 타입만 내포하고 있다.
//	  B b = (B) aa;        // aa는 B 타입을 내포하고 있지 않으므로 다운캐스팅 불가
	                       // 구문은 ㄱㅊ, 실행하면 문제(예외) 생김!!
//	  C c = (C) aa;        // aa는 C 타입을 내포하고 있지 않으므로 다운캐스팅 불가
	                       // 구문은 ㄱㅊ, 실행하면 문제(예외) 생김!!   
	  
	     //다운캐스팅 가능한 경우
	  A ab = new B();      // ab는 A,B 타입 내포, A 타입으로 지정 
	  B b = (B) ab;        // A(부모) >> B(자식) 다운캐스팅
//	  C c = (C) ab;        // ab는 C 타입을 내포 X, 캐스팅 불가능
	                       // 구문은 ㄱㅊ, 실행하면 문제(예외) 생김!!  
	  
	  B bd = new D();      // bd는 A,B,D 타입 내포, B 타입으로 지정
	                       // bd는 A,B의 필드와 메소드 접근
	  D d = (D) bd;        // bd는 D를 내포, D 타입으로 지정
	                       // B(부모) >> D(자식) 다운캐스팅
	                       // d는 A,B,D의 모든 필드와 메소드 사용가능
	  C c = (C) bd;        // bd는 C 타입을 내포하고 있지 않으므로 캐스팅 불가
	                       // 구문은 ㄱㅊ, 실행하면 문제(예외) 생김!! 
	  
	  A ad = new D();      //ad는 A,B,D 타입 내포, A 타입으로 지정
	  B b1 = (B) ad;       // A >> B 다운캐스팅 
	  D d1 = (D) ad;       // A >> D 다운캐스팅
	  C c5 = (C) ad;       //ad는 C 타입을 내포하고 있지 않으므로 캐스팅 불가
                           // 구문은 ㄱㅊ, 실행하면 문제(예외) 생김!!
	}

}
